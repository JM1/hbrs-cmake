/* Copyright (c) 2016-2018 Jakob Meng, <jakobmeng@web.de>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#ifndef @IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_IMPL_HPP
#define @IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_IMPL_HPP

#include <boost/preprocessor/seq/for_each_i.hpp>
#include <boost/preprocessor/punctuation/comma_if.hpp>

#include <boost/hana/ext/std/tuple.hpp>
#include <boost/hana/tuple.hpp>
#include <boost/hana/flatten.hpp>

#define @IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_NULL_IMPL boost::hana::tuple<>{}

@IMPL_INCLUDES@
@IMPL_DEFINES@

#define @IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_FOR_EACH_ITERATION(r, data, i, elem)                                          \
	BOOST_PP_COMMA_IF(i)  elem

#define @IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_IMPLS                                                                         \
	boost::hana::flatten(boost::hana::make_tuple(                                                                      \
		BOOST_PP_SEQ_FOR_EACH_I(@IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_FOR_EACH_ITERATION,      , @IMPL_TAGS@)               \
	))

#endif // !@IMPL_PP_PREFIX@_@IMPL_HDR_NAME@_IMPL_HPP
