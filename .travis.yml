dist: trusty
sudo: false

notifications:
  email: false

language: generic

env:
  global:
    - INSTALL_PREFIX=$HOME/.local
    - PATH=/usr/lib/ccache:$PATH

cache:
  directories:
    - $HOME/.ccache

matrix:
  include:
    # GCC 7
    - env: CC=gcc-7 CXX=g++-7 BUILD_TYPE=Debug
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-7-dev", "gcc-7", "g++-7" ]
      } }

    # GCC 8
    - env: CC=gcc-8 CXX=g++-8 BUILD_TYPE=Debug
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "gcc-8", "g++-8" ]
      } }

    # Clang 6.0
    - env: CC=clang-6.0 CXX=clang++-6.0 BUILD_TYPE=Debug
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-6.0" ]
      } }

#    # Clang 7.0
#    - env: CC=clang-7.0 CXX=clang++-7.0 BUILD_TYPE=Debug
#      addons: { apt: { 
#        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-7.0",  { sourceline: "ppa:dzombie/ccache" } ],
#        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-7.0" ]
#      } }

    # Debug
    - env: CC=clang-6.0 CXX=clang++-6.0 BUILD_TYPE=Debug
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-6.0" ]
      } }

    # MinSizeRel
    - env: CC=clang-6.0 CXX=clang++-6.0 BUILD_TYPE=MinSizeRel
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-6.0" ]
      } }

    # RelWithDebInfo
    - env: CC=clang-6.0 CXX=clang++-6.0 BUILD_TYPE=RelWithDebInfo
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-6.0" ]
      } }

    # Release
    - env: CC=clang-6.0 CXX=clang++-6.0 BUILD_TYPE=Release
      addons: { apt: { 
        sources: [ "ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0",  { sourceline: "ppa:dzombie/ccache" } ],
        packages: [ "lynx", "ccache", "libstdc++-8-dev", "clang-6.0" ]
      } }

install:
  # latest cmake is required for latest boost libraries
  - echo $PATH
  - echo $PWD
  - >
    if [ ! -d "${INSTALL_PREFIX}" ]; then 
        mkdir "${INSTALL_PREFIX}";
    fi;
    
    lynx -listonly -dump https://cmake.org/files/LatestRelease/ |
      awk '/^[ ]*[1-9][0-9]*\./{sub("^ [^.]*.[ ]*","",$0); print;}' |
      grep '.*\/cmake-[0-9]*\.[0-9]*\.[0-9]*-Linux-x86_64\.tar\.gz' |
      tail -n 1 |
      xargs curl -s |
      tar -x -z --strip-components 1 -C "${INSTALL_PREFIX}"

before_script:
  # ccache symlinks are created in "before_script:" section because they are lost after "install:" section
  # manually add symlinks to versioned clang because of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=867705
  - >
    sudo update-ccache-symlinks &&
    for cc in /usr/bin/clang-[0-9\.]* /usr/bin/clang++-[0-9\.]* ; do
        if [ -e "$cc" ]; then
          lnk=$(basename "$cc");
          if [ ! -e "/usr/lib/ccache/$lnk" ]; then
            sudo ln -s /usr/bin/ccache "/usr/lib/ccache/$lnk";
          fi;
        fi;
    done
  - nproc
  - echo `which $CC`
  - echo `which $CXX`
  - cmake --version
  - ctest --version

script:
  - ccache -s
  - >
    mkdir build && cd build &&
    (
      cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} "-DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}" .. ||
        (cat CMakeFiles/CMakeError.log; travis_terminate 1)
    ) &&
    make -j$(nproc) &&
    ccache -s &&
    make install
